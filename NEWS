New in Version 1.13
===================
* reverted back to launching executors without syncwith (which didn't work)
* memory usage for mincANTS commands is determined by the code based on total
  number of voxels in the files (can be overridden using the non linear protocol)
* a verification image is created after the LSQ6 stage
* the registration chain works (but has not been tested on its full functionality)
* fixed a bug that removed part of the filename for *final-nlin* files if the 
  original files contained a dot 

  (NOTE: this breaks compatibility with version 
  1.12, because the output filenames are now changed)

* heartbeat counts are stored in order to debug latency issues between the server
  and executors

New in Version 1.12
===================
* LSQ6 (MBM) fixes to the combination of --no-nuc and --inormalize. This would incorrectly apply the lsq6 transformation to the inormalized file twice
* MAGeT -- now uses the pipeline_name argument -- has better error messages when there are issues with the atlases/labels/masks -- if no atlases are found in the atlas library, the program exists -- has an explicit way to specify --pairwise
* improvements to error handling in the code
* most pipeline related files and directories are now prefixed with the pipeline name
* fixes to how the initial model is used. Now there are two possible scenarios:

  image.mnc
  image_mask.mnc

  or

  image.mnc
  image_mask.mnc
  image_native.mnc
  image_native_mask.mnc
  image_native_to_standard.xfm

* debug statements added in order to inspect heartbeat issues -- heartbeat checking can also be turned off at the moment
* on SciNet, as many executors as possible will start with the server using syncwith rather than after (in qsub)

New in Version 1.11
===================
(in addition to the changes in the alpha version)
* MAGeT fix: the argument max-templates was incorrectly used, and meant in 
  practice that atlases/segmentations were only created for the first 25 input 
  files (default for max-templates). This is now fixed.
* added the bootstrap option to MBM: use the first input file to the pipeline as 
  the target for the LSQ6 stage
* fixed the lsq6-target option for MBM: specify a single external file that will 
  be used as the target for the LSQ6 stage
* The parameters for some stages (mincblur/minctracc) are based on the resolution 
  of the input files. When the stage graph is created prior to running the pipeline, 
  this resolution is not always known and we used the resolution of the original input 
  files. At run time, the resolution sometimes changed, creating discrepancies between 
  stages at graph creation and run time. This would cause these stages to be rerun. 
  This is now fixed. The resolution of the files are based predominantly on the initial 
  model files or the target that is used for the LSQ6 stage.
* fixed a masking issue in MAGeT: it would produce output files with an image range of 
  unsigned short 0 to 1. The masked files now have a proper image range.
* mincblur has a hardcoded limit in terms of its output file. At graph creation time the 
  pipeline now checks to see whether mincblur can actually be run. If not, the pipeline 
  won't start and advice you to either shorten the input file names or change the path 
  you are running the pipeline in.
* Added standard configurations for pipelines (MICe, SciNet), these are accessed through 
  the environment variable PYDPIPER_CONFIG_FILE
* file containing the command that was run and the version of pydpiper being used is written out
* instead of pickling the pipeline status (which wasn't happening anymore), hashes of 
  finished jobs are written out to a finished stages file
* the default mincANTS parameters have changed from:
  [SyN 0.5, Gauss 5 1, 100x100x100x0], [SyN 0.4, Gauss 5 1, 100x100x100x20], [SyN 0.4, Gauss 5 1, 100x100x100x50]
  to:
  [SyN 0.1, Gauss 2 1, 100x100x100x0], [SyN 0.1, Gauss 2 1, 100x100x100x20], [SyN 0.1, Gauss 2 1, 100x100x100x100]
* lsq12-max-pairs is now implemented

New in Version 1.11-alpha
=========================
* Moved from optparse to ConfigArgParse, which must be installed.
  See README for usage details.
* Improve server logic for handling failed executors and cases where
  executors have insufficient resources to run available jobs.
* Improved logic for handling walltime restrictions on PBS queues.
  New flags are available to set some PBS-related variables.
* Load correct modules on SciNet, with better error reporting
  from module load failures and xfmavg stages.
* To replace the old pickling of the current system state, there's
  a new mechanism for logging completed stages to disk
  (in pydpiper-backups/finished-stages) and correctly restarting the pipeline.
* Fixed a bug where executor threads spawned from the server could hang.
* Various small bugfixes, internal improvements, changes to logging and
  usage messages, and updates to comments.
* Added a .gitignore.

New in Version 1.10
===================
* PYRO environment variables are handled inside the code. The SERVERTYPE is 
  set statically to multiplex (there are potential issues with the thread option)
  and the LOGLEVEL and DETAILED_TRACEBACK can be overridden by environment 
  variables (see the README)

New in Version 1.9
==================
* MAGeT uses the originally optimized defaults again. Hardcoded paths to the 
  linear and non linear protocol for now. With a help message of where to find
  them when not running the code at MICe.

New in Version 1.8
==================
* major code restructuring on the server and executors. The executors now send
  out a heartbeat signal to the server, which enables the server to notice 
  an executor having died. Also, all executors now properly die when the server
  is done (or gets killed).
* pickling of the pipeline has been disabled, because it turned out to cause
  huge communication delays (minutes in large pipelines: > 30000 stages)
* command line tool added to query the server as to what's happening:
  check_pipeline_status.py
* logging is separated out again (each executor has its own log file)
* Pyro4 environment variables should be set as:
   
  PYRO_DETAILED_TRACEBACK=True
  PYRO_SERVERTYPE=multiplex
  PYRO_LOGLEVEL=INFO


New in Version 1.7
==================
* the communication between the server and the executors has been upgraded
  from Pyro3 to Pyro4. Currently the following environment variables should
  be set:
  
  PYRO_DETAILED_TRACEBACK=True
  PYRO_COMMTIMEOUT=2
  PYRO_SERVERTYPE=multiplex
  PYRO_LOGLEVEL=DEBUG
  
* the stiffness, weight and similarity parameters for minctracc can now be
  set through the non linear protocol in MBM.py 
* all output from the server/executors will be stored in the current 
  working directory


New in Version 1.6
====================
* fix to MAGeT.py. Solves issues with the voxel_vote command. 

New in Version 1.5
====================
* added retrying/resubmitting of failed files to the server. At this moment
  each stage is resubmitted twice before considering it truly failed. This solves
  an apparent nfs race condition issue.

New in Version 1.4
====================
* added a warning statement when the server is finished running and shutting
  down. There is still a communication issue, and sometimes executors do not
  shut down correctly.
* added verbosity option to the server. By default is now less verbose
* changed the output of the server to the user. Now displays more meaningful
  information: total number of stages to be run, and the number of stages that
  have already been processed.
* bug fix in the pipeline executor: can now be launched from the command line
  again

New in Version 1.3
====================
* huge amounts of code restructuring
* server now launches and relaunches executors (keeps track of executors that
  are registered with the server. However, for now does not check whether the 
  registered executors are alive once in a while)
* executors can kill themselves when they've been idle for too long. They can also
  "drain" themselves (not accept any new jobs) after a certain time and then 
  shutdown when the running jobs have finished.
* added an interrupt handler for ctr+c to the server and executors
* executors on shutdown kill the running processes by using their process IDs (pid)
* a whole bunch of changes to the twolevel_model_building code... (see GitHub)
* a whole bunch of changes to the registration_chain code... (see GitHub)

